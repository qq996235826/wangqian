<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.contract.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.contract.model.Order">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="templateId" jdbcType="BIGINT" property="templateId" />
    <result column="supplierId" jdbcType="BIGINT" property="supplierId" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="itemName" jdbcType="VARCHAR" property="itemName" />
    <result column="companyName" jdbcType="VARCHAR" property="companyName" />
    <result column="bankName" jdbcType="VARCHAR" property="bankName" />
    <result column="bankNum" jdbcType="VARCHAR" property="bankNum" />
    <result column="bankImagePath" jdbcType="VARCHAR" property="bankImagePath" />
    <result column="weight" jdbcType="DOUBLE" property="weight" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="endTime" jdbcType="TIMESTAMP" property="endTime" />
    <result column="orderNum" jdbcType="VARCHAR" property="orderNum" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="updateBy" jdbcType="BIGINT" property="updateBy" />
    <result column="check1Time" jdbcType="TIMESTAMP" property="check1Time" />
    <result column="chech1By" jdbcType="BIGINT" property="chech1By" />
    <result column="check1Note" jdbcType="VARCHAR" property="check1Note" />
    <result column="check2Time" jdbcType="TIMESTAMP" property="check2Time" />
    <result column="chech2Bby" jdbcType="BIGINT" property="chech2Bby" />
    <result column="check2Note" jdbcType="VARCHAR" property="check2Note" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="ossPath" jdbcType="VARCHAR" property="ossPath" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, templateId, supplierId, createTime, itemName, companyName, bankName, bankNum, 
    bankImagePath, weight, price, amount, endTime, orderNum, status, updateTime, updateBy, 
    check1Time, chech1By, check1Note, check2Time, chech2Bby, check2Note, path, ossPath
  </sql>
  <select id="selectByExample" parameterType="com.contract.model.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from businessorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from businessorder
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from businessorder
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.contract.model.OrderExample">
    delete from businessorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.contract.model.Order">
    insert into businessorder (id, templateId, supplierId, 
      createTime, itemName, companyName, 
      bankName, bankNum, bankImagePath, 
      weight, price, amount, 
      endTime, orderNum, status, 
      updateTime, updateBy, check1Time, 
      chech1By, check1Note, check2Time, 
      chech2Bby, check2Note, path, 
      ossPath)
    values (#{id,jdbcType=BIGINT}, #{templateId,jdbcType=BIGINT}, #{supplierId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{itemName,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, 
      #{bankName,jdbcType=VARCHAR}, #{bankNum,jdbcType=VARCHAR}, #{bankImagePath,jdbcType=VARCHAR}, 
      #{weight,jdbcType=DOUBLE}, #{price,jdbcType=DOUBLE}, #{amount,jdbcType=DOUBLE}, 
      #{endTime,jdbcType=TIMESTAMP}, #{orderNum,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=BIGINT}, #{check1Time,jdbcType=TIMESTAMP}, 
      #{chech1By,jdbcType=BIGINT}, #{check1Note,jdbcType=VARCHAR}, #{check2Time,jdbcType=TIMESTAMP}, 
      #{chech2Bby,jdbcType=BIGINT}, #{check2Note,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{ossPath,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.contract.model.Order">
    insert into businessorder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="templateId != null">
        templateId,
      </if>
      <if test="supplierId != null">
        supplierId,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="itemName != null">
        itemName,
      </if>
      <if test="companyName != null">
        companyName,
      </if>
      <if test="bankName != null">
        bankName,
      </if>
      <if test="bankNum != null">
        bankNum,
      </if>
      <if test="bankImagePath != null">
        bankImagePath,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="endTime != null">
        endTime,
      </if>
      <if test="orderNum != null">
        orderNum,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateBy != null">
        updateBy,
      </if>
      <if test="check1Time != null">
        check1Time,
      </if>
      <if test="chech1By != null">
        chech1By,
      </if>
      <if test="check1Note != null">
        check1Note,
      </if>
      <if test="check2Time != null">
        check2Time,
      </if>
      <if test="chech2Bby != null">
        chech2Bby,
      </if>
      <if test="check2Note != null">
        check2Note,
      </if>
      <if test="path != null">
        path,
      </if>
      <if test="ossPath != null">
        ossPath,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="templateId != null">
        #{templateId,jdbcType=BIGINT},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankNum != null">
        #{bankNum,jdbcType=VARCHAR},
      </if>
      <if test="bankImagePath != null">
        #{bankImagePath,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=DOUBLE},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="check1Time != null">
        #{check1Time,jdbcType=TIMESTAMP},
      </if>
      <if test="chech1By != null">
        #{chech1By,jdbcType=BIGINT},
      </if>
      <if test="check1Note != null">
        #{check1Note,jdbcType=VARCHAR},
      </if>
      <if test="check2Time != null">
        #{check2Time,jdbcType=TIMESTAMP},
      </if>
      <if test="chech2Bby != null">
        #{chech2Bby,jdbcType=BIGINT},
      </if>
      <if test="check2Note != null">
        #{check2Note,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="ossPath != null">
        #{ossPath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.contract.model.OrderExample" resultType="java.lang.Long">
    select count(*) from businessorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update businessorder
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.templateId != null">
        templateId = #{record.templateId,jdbcType=BIGINT},
      </if>
      <if test="record.supplierId != null">
        supplierId = #{record.supplierId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.itemName != null">
        itemName = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null">
        companyName = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null">
        bankName = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankNum != null">
        bankNum = #{record.bankNum,jdbcType=VARCHAR},
      </if>
      <if test="record.bankImagePath != null">
        bankImagePath = #{record.bankImagePath,jdbcType=VARCHAR},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=DOUBLE},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.endTime != null">
        endTime = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderNum != null">
        orderNum = #{record.orderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        updateBy = #{record.updateBy,jdbcType=BIGINT},
      </if>
      <if test="record.check1Time != null">
        check1Time = #{record.check1Time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.chech1By != null">
        chech1By = #{record.chech1By,jdbcType=BIGINT},
      </if>
      <if test="record.check1Note != null">
        check1Note = #{record.check1Note,jdbcType=VARCHAR},
      </if>
      <if test="record.check2Time != null">
        check2Time = #{record.check2Time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.chech2Bby != null">
        chech2Bby = #{record.chech2Bby,jdbcType=BIGINT},
      </if>
      <if test="record.check2Note != null">
        check2Note = #{record.check2Note,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null">
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.ossPath != null">
        ossPath = #{record.ossPath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update businessorder
    set id = #{record.id,jdbcType=BIGINT},
      templateId = #{record.templateId,jdbcType=BIGINT},
      supplierId = #{record.supplierId,jdbcType=BIGINT},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      itemName = #{record.itemName,jdbcType=VARCHAR},
      companyName = #{record.companyName,jdbcType=VARCHAR},
      bankName = #{record.bankName,jdbcType=VARCHAR},
      bankNum = #{record.bankNum,jdbcType=VARCHAR},
      bankImagePath = #{record.bankImagePath,jdbcType=VARCHAR},
      weight = #{record.weight,jdbcType=DOUBLE},
      price = #{record.price,jdbcType=DOUBLE},
      amount = #{record.amount,jdbcType=DOUBLE},
      endTime = #{record.endTime,jdbcType=TIMESTAMP},
      orderNum = #{record.orderNum,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      updateBy = #{record.updateBy,jdbcType=BIGINT},
      check1Time = #{record.check1Time,jdbcType=TIMESTAMP},
      chech1By = #{record.chech1By,jdbcType=BIGINT},
      check1Note = #{record.check1Note,jdbcType=VARCHAR},
      check2Time = #{record.check2Time,jdbcType=TIMESTAMP},
      chech2Bby = #{record.chech2Bby,jdbcType=BIGINT},
      check2Note = #{record.check2Note,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      ossPath = #{record.ossPath,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.contract.model.Order">
    update businessorder
    <set>
      <if test="templateId != null">
        templateId = #{templateId,jdbcType=BIGINT},
      </if>
      <if test="supplierId != null">
        supplierId = #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="itemName != null">
        itemName = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        companyName = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bankName = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankNum != null">
        bankNum = #{bankNum,jdbcType=VARCHAR},
      </if>
      <if test="bankImagePath != null">
        bankImagePath = #{bankImagePath,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=DOUBLE},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="endTime != null">
        endTime = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNum != null">
        orderNum = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        updateBy = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="check1Time != null">
        check1Time = #{check1Time,jdbcType=TIMESTAMP},
      </if>
      <if test="chech1By != null">
        chech1By = #{chech1By,jdbcType=BIGINT},
      </if>
      <if test="check1Note != null">
        check1Note = #{check1Note,jdbcType=VARCHAR},
      </if>
      <if test="check2Time != null">
        check2Time = #{check2Time,jdbcType=TIMESTAMP},
      </if>
      <if test="chech2Bby != null">
        chech2Bby = #{chech2Bby,jdbcType=BIGINT},
      </if>
      <if test="check2Note != null">
        check2Note = #{check2Note,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="ossPath != null">
        ossPath = #{ossPath,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.contract.model.Order">
    update businessorder
    set templateId = #{templateId,jdbcType=BIGINT},
      supplierId = #{supplierId,jdbcType=BIGINT},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      itemName = #{itemName,jdbcType=VARCHAR},
      companyName = #{companyName,jdbcType=VARCHAR},
      bankName = #{bankName,jdbcType=VARCHAR},
      bankNum = #{bankNum,jdbcType=VARCHAR},
      bankImagePath = #{bankImagePath,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=DOUBLE},
      price = #{price,jdbcType=DOUBLE},
      amount = #{amount,jdbcType=DOUBLE},
      endTime = #{endTime,jdbcType=TIMESTAMP},
      orderNum = #{orderNum,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      updateBy = #{updateBy,jdbcType=BIGINT},
      check1Time = #{check1Time,jdbcType=TIMESTAMP},
      chech1By = #{chech1By,jdbcType=BIGINT},
      check1Note = #{check1Note,jdbcType=VARCHAR},
      check2Time = #{check2Time,jdbcType=TIMESTAMP},
      chech2Bby = #{chech2Bby,jdbcType=BIGINT},
      check2Note = #{check2Note,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      ossPath = #{ossPath,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.contract.model.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from businessorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>