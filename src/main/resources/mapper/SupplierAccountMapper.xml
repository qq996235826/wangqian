<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.contract.mapper.SupplierAccountMapper">
  <resultMap id="BaseResultMap" type="com.contract.model.SupplierAccount">
    <id column="ID" jdbcType="INTEGER" property="ID" />
    <result column="supplierIDNum" jdbcType="VARCHAR" property="supplierIDNum" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="bank" jdbcType="VARCHAR" property="bank" />
    <result column="bankImage" jdbcType="VARCHAR" property="bankImage" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="companyCode" jdbcType="CHAR" property="companyCode" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, supplierIDNum, name, account, bank, bankImage, note, status, companyCode, createTime
  </sql>
  <select id="selectByExample" parameterType="com.contract.model.SupplierAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from supplieraccount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from supplieraccount
    where ID = #{ID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from supplieraccount
    where ID = #{ID,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.contract.model.SupplierAccountExample">
    delete from supplieraccount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="ID" keyProperty="ID" parameterType="com.contract.model.SupplierAccount" useGeneratedKeys="true">
    insert into supplieraccount (supplierIDNum, name, account, 
      bank, bankImage, note, 
      status, companyCode, createTime
      )
    values (#{supplierIDNum,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{bank,jdbcType=VARCHAR}, #{bankImage,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{companyCode,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="ID" keyProperty="ID" parameterType="com.contract.model.SupplierAccount" useGeneratedKeys="true">
    insert into supplieraccount
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="supplierIDNum != null">
        supplierIDNum,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="bank != null">
        bank,
      </if>
      <if test="bankImage != null">
        bankImage,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="companyCode != null">
        companyCode,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="supplierIDNum != null">
        #{supplierIDNum,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="bankImage != null">
        #{bankImage,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="companyCode != null">
        #{companyCode,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.contract.model.SupplierAccountExample" resultType="java.lang.Long">
    select count(*) from supplieraccount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update supplieraccount
    <set>
      <if test="record.ID != null">
        ID = #{record.ID,jdbcType=INTEGER},
      </if>
      <if test="record.supplierIDNum != null">
        supplierIDNum = #{record.supplierIDNum,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.bank != null">
        bank = #{record.bank,jdbcType=VARCHAR},
      </if>
      <if test="record.bankImage != null">
        bankImage = #{record.bankImage,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.companyCode != null">
        companyCode = #{record.companyCode,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update supplieraccount
    set ID = #{record.ID,jdbcType=INTEGER},
      supplierIDNum = #{record.supplierIDNum,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      bank = #{record.bank,jdbcType=VARCHAR},
      bankImage = #{record.bankImage,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      companyCode = #{record.companyCode,jdbcType=CHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.contract.model.SupplierAccount">
    update supplieraccount
    <set>
      <if test="supplierIDNum != null">
        supplierIDNum = #{supplierIDNum,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
        bank = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="bankImage != null">
        bankImage = #{bankImage,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="companyCode != null">
        companyCode = #{companyCode,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{ID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.contract.model.SupplierAccount">
    update supplieraccount
    set supplierIDNum = #{supplierIDNum,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      bank = #{bank,jdbcType=VARCHAR},
      bankImage = #{bankImage,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      companyCode = #{companyCode,jdbcType=CHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP}
    where ID = #{ID,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.contract.model.SupplierAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from supplieraccount
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>